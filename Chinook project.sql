/* CONTENT STRATEGY: we look sales revenue generated by artists based location, genre, media type */

/* Genre: Highest generated by a genre */
SELECT g.genre_id, g.name, SUM(inv.total) AS revenue
FROM genre AS g -- we establish a relationship with invoice table in order to get the revenue generated --
LEFT JOIN track AS t -- use left since genre table is the main table of interest and we wish to know revenue generated by each genre --
ON g.genre_id = t.genre_id
LEFT JOIN invoice_line AS i
ON t.track_id = i.track_id
LEFT JOIN invoice AS inv
ON i.invoice_id = inv.invoice_id
GROUP BY g.genre_id, g.name
HAVING SUM(inv.total) IS NOT NULL -- apparently people did not purchase opera music --
ORDER BY revenue DESC 
LIMIT 5;


/* location with highest revenue and number of sales in terms of genre and look at artists */ 
SELECT invoice.billing_country AS customer_location, 
		genre.name AS genres, 
		artist.name AS artists,
		COUNT(invoice.invoice_id) AS sales_count,
		SUM(total) AS revenue
FROM invoice
JOIN invoice_line -- joining on invoice to establish a relationship using invoice_id and linking it to the track table --
ON invoice_line.invoice_id = invoice.invoice_id
JOIN track -- joined the trackid to the invoiceid to establish a relationship with the genre table --
ON invoice_line.track_id = track.track_id
JOIN genre 
ON track.genre_id = genre.genre_id
JOIN album -- joining the album to track table to establish a relationship with the genre table and artist table --
ON album.album_id = track.album_id
JOIN artist
ON artist.artist_id = album.artist_id -- album was joined using inner join to link the artist table --
GROUP BY customer_location, genres, artists -- grouped by non-aggreggate variables --
ORDER BY revenue DESC, sales_count DESC -- sorted it to establish highes parameter in revenue and sales_count --
LIMIT 10; -- looked at the top 10 --

/* location and genre with the highest sales */
SELECT invoice.billing_country AS customer_location, 
		genre.name AS genres, 
		SUM(total) AS revenue
FROM invoice
JOIN invoice_line
ON invoice_line.invoice_id = invoice.invoice_id
JOIN track
ON invoice_line.track_id = track.track_id
JOIN genre
ON track.genre_id = genre.genre_id
GROUP BY customer_location, genres
ORDER BY revenue DESC
LIMIT 10;